Erlang Sudoku solver

This is my first real program in Erlang, so please by merciful.

Version 0.something

Right now it can solve standard 9x9 solvable sudokus, i.e,
sudokus which are not under-determined.
I did not use any OTP functions, just plain erlang.
There is one central process to handle user functions and
9x9 cell processes. The cells communicate via the central process
and broadcast any state changes.

It is a plain erlang file, so you have to compile it by hand.

A sudoku is internally represented by a 9x9 matrix, all
accessor functions work with row, column parameters.
e.g.
  set(1,2,3)
sets the cell in row 1 and column 2 to the value 3.

Usage:

S:d0% erl
Erlang/OTP 17 [DEVELOPMENT] [erts-6.2] [source-8aa3475] [64-bit] [smp:2:2] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V6.2  (abort with ^G)
1> c(sudoku).
{ok,sudoku}
2> c(sudoku_test).
{ok,sudoku_test}
3> 
3> 
3> sudoku_test:do_test2().
{set,9,7,7}
4> sudoku:printClean().
[[7,5,8,1,9,2,3,6,4],
 [9,6,4,3,7,5,2,1,8],
 [3,1,2,6,4,8,5,7,9],
 [6,2,9,5,1,3,8,4,7],
 [8,7,5,9,6,4,1,2,3],
 [4,3,1,2,8,7,6,9,5],
 [2,9,7,8,5,6,4,3,1],
 [5,4,3,7,2,1,9,8,6],
 [1,8,6,4,3,9,7,5,2]]


TODO:
 - wx GUI
 - there was something else..
